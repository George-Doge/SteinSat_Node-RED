[
    {
        "id": "4e3308c8a425e5aa",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0638856b0b58533d",
        "type": "group",
        "z": "4e3308c8a425e5aa",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f997ee2e75529aec",
            "8331426ab672a0d2",
            "0ba628f1b33cce06",
            "736cf8703e4f0a6f"
        ],
        "x": 134,
        "y": 879,
        "w": 832,
        "h": 162
    },
    {
        "id": "d9b017e772e6b8ed",
        "type": "group",
        "z": "4e3308c8a425e5aa",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "96b5d7b6b4e9a96e",
            "e970eb780bc6129b"
        ],
        "x": 134,
        "y": 739,
        "w": 512,
        "h": 82
    },
    {
        "id": "2dde80892adaa781",
        "type": "group",
        "z": "4e3308c8a425e5aa",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b715fb60e8ea33eb",
            "1c7ec72837ef7e8d",
            "b02107c82c051e61",
            "d4927d3b0776bce7",
            "f2680cc46f6c4dda",
            "b4b1bc06347f5ef3",
            "78fc3745a99e9119",
            "5fd35d1296ac30d0",
            "40fda92c9ea1533e",
            "0745cfde561ad2ce",
            "a9d2a1c69d4845e8",
            "124df3c39f557658"
        ],
        "x": 1004,
        "y": 639,
        "w": 1142,
        "h": 242
    },
    {
        "id": "e19beec28c9f2874",
        "type": "group",
        "z": "4e3308c8a425e5aa",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "258bac750f7d2a93",
            "ec9525b924ba680c",
            "bbfac5bf78ad021f",
            "f034562727347e3e"
        ],
        "x": 1944,
        "y": 39,
        "w": 562,
        "h": 142
    },
    {
        "id": "3ac4614074b584c9",
        "type": "group",
        "z": "4e3308c8a425e5aa",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3547dfa233b7d62e",
            "d7a8be1ef2c3f08c",
            "dacaf47b3dcc5134",
            "b84c65335caff905",
            "1a3155631653a283",
            "a1e48aac6d605c8d",
            "e1492797c96fc727",
            "06fa0a8f0128871d",
            "a0c1bfb091e8e142",
            "4702d732236ca5bc",
            "045d5afefe99a778",
            "90065f2b1a3a5762",
            "3e5a2a28f3501473",
            "1a7d0546fdb54147",
            "6e01d36b48497f7d",
            "03cfcc4cb4955c13",
            "0e757d4df0c32a89",
            "38aa4d9489bd8cfb",
            "7121ce101ef29677",
            "ab02dbc4f06b09d3",
            "99f90f0ccf3b40de",
            "55062ad224ee5a6f",
            "0efc06c8c1fb654b",
            "f229d802f0502fa8",
            "fd2daee4a048ae7e",
            "322395839479519b",
            "deef6dc2525ed587",
            "add486f9f1277ce1",
            "e4bcf1f1ac5df43f",
            "b984fd2e29d3944d",
            "c84c7a6cec4e2a08"
        ],
        "x": 174,
        "y": 19,
        "w": 1592,
        "h": 582
    },
    {
        "id": "9b811b88a2e893d0",
        "type": "serial-port",
        "name": "CanSat",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "115200",
        "databits": 8,
        "parity": "none",
        "stopbits": 1,
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": 10000
    },
    {
        "id": "81dac7e1a86008bc",
        "type": "ui_tab",
        "name": "Main Dashboard - BMP, Packet Status",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "452071d4f69ee64f",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#ffdd00",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#3e605f",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#3e605f",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#3e605f",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#5c8e8d",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#3e605f",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "mouse",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "bc35821eb5c27229",
        "type": "ui_group",
        "name": "Ground Station Status",
        "tab": "81dac7e1a86008bc",
        "order": 1,
        "disp": true,
        "width": 5,
        "collapse": true,
        "className": ""
    },
    {
        "id": "09380e53c37d0afe",
        "type": "ui_group",
        "name": "BMP 280 Data 1",
        "tab": "81dac7e1a86008bc",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": true,
        "className": ""
    },
    {
        "id": "857c116ebed285f5",
        "type": "global-config",
        "name": "global-config",
        "env": []
    },
    {
        "id": "b31b0b58eb65912f",
        "type": "ui_group",
        "name": "BMP 280 Data 2",
        "tab": "81dac7e1a86008bc",
        "order": 3,
        "disp": true,
        "width": 12,
        "collapse": true,
        "className": ""
    },
    {
        "id": "3c32f7ed1a78d140",
        "type": "ui_tab",
        "name": "Accelerometer Data Read",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3e23bdec243c8a23",
        "type": "ui_group",
        "name": "MPU6050 Data",
        "tab": "3c32f7ed1a78d140",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": true,
        "className": ""
    },
    {
        "id": "4c73ace1e4886fb4",
        "type": "ui_group",
        "name": "Internal Temperature Data",
        "tab": "3c32f7ed1a78d140",
        "order": 2,
        "disp": true,
        "width": 8,
        "collapse": true,
        "className": ""
    },
    {
        "id": "3547dfa233b7d62e",
        "type": "serial in",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Read CanSat",
        "serial": "9b811b88a2e893d0",
        "x": 290,
        "y": 420,
        "wires": [
            [
                "03cfcc4cb4955c13"
            ]
        ]
    },
    {
        "id": "d7a8be1ef2c3f08c",
        "type": "debug",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Packet Message Debug Printer",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "dacaf47b3dcc5134",
        "type": "json",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "JSON packet parser",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 580,
        "y": 420,
        "wires": [
            [
                "d7a8be1ef2c3f08c",
                "a1e48aac6d605c8d",
                "a0c1bfb091e8e142",
                "045d5afefe99a778",
                "90065f2b1a3a5762",
                "1a7d0546fdb54147",
                "0e757d4df0c32a89",
                "38aa4d9489bd8cfb",
                "ab02dbc4f06b09d3",
                "99f90f0ccf3b40de",
                "55062ad224ee5a6f",
                "322395839479519b",
                "c84c7a6cec4e2a08"
            ]
        ]
    },
    {
        "id": "b84c65335caff905",
        "type": "ui_chart",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Onboard Temperature",
        "group": "4c73ace1e4886fb4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Onboard Temperature [°C]",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for Onboard Temperature Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1240,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "1a3155631653a283",
        "type": "ui_text",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "group": "bc35821eb5c27229",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Packet Counter",
        "label": "Packet Counter:",
        "format": "{{msg.payload.packetCount}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1200,
        "y": 300,
        "wires": []
    },
    {
        "id": "a1e48aac6d605c8d",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Parse Onboard Temperature",
        "func": "msg.payload = msg.payload.onboardTemperature;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 240,
        "wires": [
            [
                "b84c65335caff905"
            ]
        ]
    },
    {
        "id": "e1492797c96fc727",
        "type": "inject",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Simulate Input",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"isValid\":true,\"onboardTemperature\":25,\"temperature\":15.9848,\"pressure\":1030.5,\"altitude\":206.1333,\"acceleration_vector_magnitude\":3.45481,\"gyro_x\":0.1111504,\"gyro_y\":0.1111504,\"gyro_z\":0.1111504,\"lat\":48.716385,\"lng\":21.261074,\"speed_over_ground\":10,\"alt_gps\":206.2,\"packetCount\":-1,\"packetsFailed\":999}",
        "payloadType": "json",
        "x": 300,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "06fa0a8f0128871d",
        "type": "comment",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Simulated input comment",
        "info": "This inject node is meant to simulate input from CanSat with data if none is available.",
        "x": 350,
        "y": 260,
        "wires": []
    },
    {
        "id": "f997ee2e75529aec",
        "type": "debug",
        "z": "4e3308c8a425e5aa",
        "g": "0638856b0b58533d",
        "name": "Debug connection status",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 700,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8331426ab672a0d2",
        "type": "status",
        "z": "4e3308c8a425e5aa",
        "g": "0638856b0b58533d",
        "name": "Serial Connection Status Monitor",
        "scope": [
            "3547dfa233b7d62e"
        ],
        "x": 290,
        "y": 920,
        "wires": [
            [
                "736cf8703e4f0a6f"
            ]
        ]
    },
    {
        "id": "0ba628f1b33cce06",
        "type": "ui_text",
        "z": "4e3308c8a425e5aa",
        "g": "0638856b0b58533d",
        "group": "bc35821eb5c27229",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Board Connection",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 920,
        "wires": []
    },
    {
        "id": "736cf8703e4f0a6f",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "0638856b0b58533d",
        "name": "Status Parser",
        "func": "let message = msg.status.text;\nif (message === \"node-red:common.status.connected\") {\n    msg.payload = \"Connected\";\n}\nelse if (message === \"node-red:common.status.not-connected\") {\n    msg.payload = \"Not connected\";\n} else {\n    msg.payload = message;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 920,
        "wires": [
            [
                "0ba628f1b33cce06",
                "f997ee2e75529aec"
            ]
        ]
    },
    {
        "id": "a0c1bfb091e8e142",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Parse Temperature",
        "func": "msg.payload = msg.payload.temperature;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 60,
        "wires": [
            [
                "4702d732236ca5bc"
            ]
        ]
    },
    {
        "id": "4702d732236ca5bc",
        "type": "ui_chart",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Temperature Chart",
        "group": "09380e53c37d0afe",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Temperature [°C]",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for sensor Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1180,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "045d5afefe99a778",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Parse pressure",
        "func": "msg.payload = msg.payload.pressure;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 120,
        "wires": [
            [
                "3e5a2a28f3501473"
            ]
        ]
    },
    {
        "id": "90065f2b1a3a5762",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Parse Altitude",
        "func": "msg.payload = msg.payload.altitude;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 180,
        "wires": [
            [
                "6e01d36b48497f7d"
            ]
        ]
    },
    {
        "id": "3e5a2a28f3501473",
        "type": "ui_chart",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Pressure Chart",
        "group": "09380e53c37d0afe",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Pressure [hpa]",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for sensor Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1180,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "96b5d7b6b4e9a96e",
        "type": "catch",
        "z": "4e3308c8a425e5aa",
        "g": "d9b017e772e6b8ed",
        "name": "Non-JSON packet data catcher",
        "scope": [
            "dacaf47b3dcc5134"
        ],
        "uncaught": false,
        "x": 290,
        "y": 780,
        "wires": [
            [
                "e970eb780bc6129b"
            ]
        ]
    },
    {
        "id": "e970eb780bc6129b",
        "type": "ui_text",
        "z": "4e3308c8a425e5aa",
        "d": true,
        "g": "d9b017e772e6b8ed",
        "group": "bc35821eb5c27229",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Other Message",
        "label": "Latest non-JSON message:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 540,
        "y": 780,
        "wires": []
    },
    {
        "id": "1a7d0546fdb54147",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Simulation checker",
        "func": "let count = msg.payload.packetCount;\nif (count === -1) {\n    msg.payload.packetCount = \"Simulated Packet!\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 300,
        "wires": [
            [
                "1a3155631653a283"
            ]
        ]
    },
    {
        "id": "6e01d36b48497f7d",
        "type": "ui_chart",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Altitude chart",
        "group": "b31b0b58eb65912f",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Altitude [m]",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for sensor Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1170,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b715fb60e8ea33eb",
        "type": "file",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "name": "output.csv write",
        "filename": "path",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1960,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "1c7ec72837ef7e8d",
        "type": "csv",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "name": "Array to CSV parser",
        "spec": "rfc",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "TIme, isValid?, Onboard Temperature [°C], Temperature [°C], Pressure [hpa] , Altitude [m], Acceleration [m*s^-2], Gyroscope - X [°/s], Gyroscope - Y [°/s], Gyroscope - Z [°/s], Latitude [°], Longitude [°], Ground Speed [kt], Altitude (GPS) [m], Course Over Ground [°], Packet counter, Failed packets",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1520,
        "y": 680,
        "wires": [
            [
                "b4b1bc06347f5ef3"
            ]
        ]
    },
    {
        "id": "b02107c82c051e61",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "name": "JSON to Array Converter",
        "func": "let now = new Date();\n// console.log(now.toLocaleString('sk-SK'));\nlet values_array = [now.toLocaleString('sk-SK') ,msg.payload.isValid ,msg.payload.onboardTemperature, msg.payload.temperature, msg.payload.pressure,\n msg.payload.altitude, msg.payload.acceleration_vector_magnitude, msg.payload.gyro_x, msg.payload.gyro_y, msg.payload.gyro_z, \n msg.payload.lat, msg.payload.lng, msg.payload.speed_over_ground, msg.payload.alt_gps, msg.course_over_ground ,msg.payload.packetCount, msg.payload.packetsFailed];\n// console.log(values_array);\nmsg.payload = values_array;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 680,
        "wires": [
            [
                "1c7ec72837ef7e8d"
            ]
        ]
    },
    {
        "id": "d4927d3b0776bce7",
        "type": "ui_button",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "name": "",
        "group": "bc35821eb5c27229",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Save data to new file",
        "tooltip": "Starts saving data to another file",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 1220,
        "y": 760,
        "wires": [
            [
                "f2680cc46f6c4dda"
            ]
        ]
    },
    {
        "id": "f2680cc46f6c4dda",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "name": "Increase save file number",
        "func": "let num = flow.get(\"save_file_num\");\nflow.set(\"save_file_num\", num+1);\nlet new_num = flow.get(\"save_file_num\");\nflow.set(\"save_file_path\",\"Desktop/CanSatOutput/output_\"+new_num+\".csv\");\nmsg.payload = new_num;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "03cfcc4cb4955c13",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Start file Counter",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"save_file_num\", 0);\nflow.set(\"save_file_path\", \"Desktop/CanSatOutput/output_0.csv\");",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 540,
        "wires": [
            [
                "dacaf47b3dcc5134"
            ]
        ]
    },
    {
        "id": "b4b1bc06347f5ef3",
        "type": "change",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "path",
                "pt": "msg",
                "to": "save_file_path",
                "tot": "flow",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 680,
        "wires": [
            [
                "b715fb60e8ea33eb"
            ]
        ]
    },
    {
        "id": "78fc3745a99e9119",
        "type": "ui_text",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "group": "bc35821eb5c27229",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Saving To File Num:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2020,
        "y": 760,
        "wires": []
    },
    {
        "id": "5fd35d1296ac30d0",
        "type": "inject",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "save_file_num",
        "payloadType": "flow",
        "x": 1780,
        "y": 760,
        "wires": [
            [
                "78fc3745a99e9119"
            ]
        ]
    },
    {
        "id": "40fda92c9ea1533e",
        "type": "comment",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "name": "TODO",
        "info": "# TODO\n - Add new header after changing destination file in csv parser",
        "x": 1770,
        "y": 840,
        "wires": []
    },
    {
        "id": "0e757d4df0c32a89",
        "type": "ui_text",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "group": "bc35821eb5c27229",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Missing Packets:",
        "format": "{{msg.payload.packetsFailed}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 950,
        "y": 360,
        "wires": []
    },
    {
        "id": "38aa4d9489bd8cfb",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Parse acceleration",
        "func": "msg.payload = msg.payload.acceleration_vector_magnitude;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 420,
        "wires": [
            [
                "7121ce101ef29677"
            ]
        ]
    },
    {
        "id": "7121ce101ef29677",
        "type": "ui_chart",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Acceleration Chart",
        "group": "3e23bdec243c8a23",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Acceleration [m/s^2]",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for Acceleration data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1190,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ab02dbc4f06b09d3",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Parse gyro x",
        "func": "msg.payload = msg.payload.gyro_x;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 480,
        "wires": [
            [
                "0efc06c8c1fb654b"
            ]
        ]
    },
    {
        "id": "99f90f0ccf3b40de",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Parse gyro y",
        "func": "msg.payload = msg.payload.gyro_y;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 520,
        "wires": [
            [
                "f229d802f0502fa8"
            ]
        ]
    },
    {
        "id": "55062ad224ee5a6f",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Parse gyro z",
        "func": "msg.payload = msg.payload.gyro_z;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 560,
        "wires": [
            [
                "fd2daee4a048ae7e"
            ]
        ]
    },
    {
        "id": "0efc06c8c1fb654b",
        "type": "ui_chart",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "gyro x",
        "group": "3e23bdec243c8a23",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Gyroscope X Axis [°/s]",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for Gyroscope data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1110,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f229d802f0502fa8",
        "type": "ui_chart",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "gyro y",
        "group": "3e23bdec243c8a23",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Gyroscope Y axis [°/s]",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for Gyroscope data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1110,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "fd2daee4a048ae7e",
        "type": "ui_chart",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "gyro z",
        "group": "3e23bdec243c8a23",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Gyroscope Z Axis [°/s]",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for Gyroscope data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1110,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "deef6dc2525ed587",
        "type": "udp out",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "",
        "addr": "127.0.0.1",
        "iface": "",
        "port": "6050",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1610,
        "y": 380,
        "wires": []
    },
    {
        "id": "322395839479519b",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Gyro Array",
        "func": "let now = new Date();\nlet epoch = now.getTime();\nlet flight_timestamp = flow.get(\"timestamp_flight_start\");\n\nlet delta = epoch - flight_timestamp;\n\nlet buffer = Buffer.alloc(18);\n\n// header\nbuffer.writeUInt8(0x1, 0);\nbuffer.writeUInt8(4 * 4, 1);\nbuffer.writeUInt32LE(delta, 2);\nbuffer.writeFloatLE(msg.payload.gyro_x, 6);\nbuffer.writeFloatLE(msg.payload.gyro_y, 10);\nbuffer.writeFloatLE(msg.payload.gyro_z, 14);\n\n// let array = [now.toLocaleString('sk-SK'), msg.payload.gyro_x, msg.payload.gyro_y, msg.payload.gyro_z];\n\nmsg.payload = buffer;\n// console.log(delta);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 380,
        "wires": [
            [
                "deef6dc2525ed587"
            ]
        ]
    },
    {
        "id": "add486f9f1277ce1",
        "type": "udp in",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "",
        "iface": "",
        "port": "6050",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "buffer",
        "x": 1360,
        "y": 460,
        "wires": [
            [
                "b984fd2e29d3944d"
            ]
        ]
    },
    {
        "id": "e4bcf1f1ac5df43f",
        "type": "debug",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 540,
        "wires": []
    },
    {
        "id": "b984fd2e29d3944d",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "decode udp - debug, disable on run",
        "func": "let buffer = msg.payload;\n\nlet header = buffer.readUInt8(0);\nlet buffer_size = buffer.readUInt8(1);\nlet timestamp = buffer.readUInt32LE(2);\nlet gyro_x = buffer.readFloatLE(6);\nlet gyro_y = buffer.readFloatLE(10);\nlet gyro_z = buffer.readFloatLE(14);\n\nmsg.payload = [header, buffer_size, timestamp, gyro_x, gyro_y, gyro_z];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 460,
        "wires": [
            [
                "e4bcf1f1ac5df43f"
            ]
        ]
    },
    {
        "id": "0745cfde561ad2ce",
        "type": "ui_button",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "name": "",
        "group": "bc35821eb5c27229",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Mark Flight Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "timestamp_flight_start",
        "topicType": "msg",
        "x": 1220,
        "y": 820,
        "wires": [
            [
                "a9d2a1c69d4845e8"
            ]
        ]
    },
    {
        "id": "a9d2a1c69d4845e8",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "name": "set flow timestamp_flight_start",
        "func": "flow.set(\"timestamp_flight_start\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "258bac750f7d2a93",
        "type": "worldmap",
        "z": "4e3308c8a425e5aa",
        "g": "e19beec28c9f2874",
        "name": "SteinSat Map Plotter",
        "lat": "48.74327",
        "lon": "21.44837",
        "zoom": "14",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "deg",
        "showgrid": "true",
        "showruler": "true",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,RW",
        "maplist": "OSMG,OSMC,EsriC,EsriS",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 2380,
        "y": 120,
        "wires": []
    },
    {
        "id": "ec9525b924ba680c",
        "type": "inject",
        "z": "4e3308c8a425e5aa",
        "g": "e19beec28c9f2874",
        "name": "Bidovce Airport Location",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "position",
        "payload": "{\"name\":\"Bidovce Letisko\",\"lon\":21.44837,\"lat\":48.74327,\"icon\":\"friend\",\"layer\":\"sat\",\"label\":true}",
        "payloadType": "json",
        "x": 2120,
        "y": 80,
        "wires": [
            [
                "258bac750f7d2a93"
            ]
        ]
    },
    {
        "id": "c84c7a6cec4e2a08",
        "type": "link out",
        "z": "4e3308c8a425e5aa",
        "g": "3ac4614074b584c9",
        "name": "Link Map",
        "mode": "link",
        "links": [
            "124df3c39f557658",
            "bbfac5bf78ad021f"
        ],
        "x": 725,
        "y": 520,
        "wires": []
    },
    {
        "id": "bbfac5bf78ad021f",
        "type": "link in",
        "z": "4e3308c8a425e5aa",
        "g": "e19beec28c9f2874",
        "name": "Link Map Out",
        "links": [
            "c84c7a6cec4e2a08"
        ],
        "x": 1985,
        "y": 140,
        "wires": [
            [
                "f034562727347e3e"
            ]
        ]
    },
    {
        "id": "f034562727347e3e",
        "type": "function",
        "z": "4e3308c8a425e5aa",
        "g": "e19beec28c9f2874",
        "name": "Parse GPS Data",
        "func": "msg.payload = {\n    \"name\": \"SteinSat\",\n    \"lon\": msg.payload.lng,\n    \"lat\": msg.payload.lat,\n    \"alt\": msg.payload.alt_gps + \"m\",\n    \"SOG\": msg.payload.speed_over_ground,\n    \"COG\" : msg.payload.course_over_ground,\n    \"icon\": \"satellite\",\n    \"label\": true,\n    \"layer\": \"sat\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 140,
        "wires": [
            [
                "258bac750f7d2a93"
            ]
        ]
    },
    {
        "id": "124df3c39f557658",
        "type": "link in",
        "z": "4e3308c8a425e5aa",
        "g": "2dde80892adaa781",
        "name": "Link In Data Saving",
        "links": [
            "c84c7a6cec4e2a08"
        ],
        "x": 1045,
        "y": 680,
        "wires": [
            [
                "b02107c82c051e61"
            ]
        ]
    }
]